{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "data = pd.read_csv('price_and_demand.csv')\n",
    "import seaborn as sns\n",
    "\n",
    "\n",
    "print(data.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(data.info())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "           4178.18         8.94\n",
      "count  8351.000000  8351.000000\n",
      "mean   4420.866351    54.634773\n",
      "std     788.585884    88.054001\n",
      "min    1976.530000  -981.820000\n",
      "25%    3913.955000     0.000000\n",
      "50%    4342.350000    72.020000\n",
      "75%    4885.065000   106.225000\n",
      "max    8850.610000  3944.960000\n"
     ]
    }
   ],
   "source": [
    "print(data.describe())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_cleaned = data.dropna()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_filled = data.fillna(data.mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Demand', ylabel='Cost'>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "\n",
    "df  = pd.read_csv(\"price_and_demand.csv\")\n",
    "df.plot(kind='scatter',x='Demand',y='Price',c='Price',colormap='viridis')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State</th>\n",
       "      <th>Date_Time</th>\n",
       "      <th>Demand</th>\n",
       "      <th>Price</th>\n",
       "      <th>Trading_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>VIC1</td>\n",
       "      <td>1/11/2022 0:30</td>\n",
       "      <td>4178.18</td>\n",
       "      <td>8.94</td>\n",
       "      <td>TRADE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>VIC1</td>\n",
       "      <td>1/11/2022 1:00</td>\n",
       "      <td>4086.02</td>\n",
       "      <td>0.14</td>\n",
       "      <td>TRADE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>VIC1</td>\n",
       "      <td>1/11/2022 1:30</td>\n",
       "      <td>4033.37</td>\n",
       "      <td>0.02</td>\n",
       "      <td>TRADE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>VIC1</td>\n",
       "      <td>1/11/2022 2:00</td>\n",
       "      <td>3985.64</td>\n",
       "      <td>0.00</td>\n",
       "      <td>TRADE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>VIC1</td>\n",
       "      <td>1/11/2022 2:30</td>\n",
       "      <td>3885.64</td>\n",
       "      <td>0.02</td>\n",
       "      <td>TRADE</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  State       Date_Time   Demand  Price Trading_Status\n",
       "0  VIC1  1/11/2022 0:30  4178.18   8.94          TRADE\n",
       "1  VIC1  1/11/2022 1:00  4086.02   0.14          TRADE\n",
       "2  VIC1  1/11/2022 1:30  4033.37   0.02          TRADE\n",
       "3  VIC1  1/11/2022 2:00  3985.64   0.00          TRADE\n",
       "4  VIC1  1/11/2022 2:30  3885.64   0.02          TRADE"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "# Load the price and demand data\n",
    "price_demand_data = pd.read_csv('price_and_demand.csv')\n",
    "\n",
    "# Display the first few rows of the data\n",
    "price_demand_data.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Location</th>\n",
       "      <th>Date</th>\n",
       "      <th>Minimum temperature (°C)</th>\n",
       "      <th>Maximum temperature (°C)</th>\n",
       "      <th>Rainfall (mm)</th>\n",
       "      <th>Evaporation (mm)</th>\n",
       "      <th>Sunshine (hours)</th>\n",
       "      <th>Direction of maximum wind gust</th>\n",
       "      <th>Speed of maximum wind gust (km/h)</th>\n",
       "      <th>Time of maximum wind gust</th>\n",
       "      <th>...</th>\n",
       "      <th>9am cloud amount (oktas)</th>\n",
       "      <th>9am wind direction</th>\n",
       "      <th>9am wind speed (km/h)</th>\n",
       "      <th>9am MSL pressure (hPa)</th>\n",
       "      <th>3pm Temperature (°C)</th>\n",
       "      <th>3pm relative humidity (%)</th>\n",
       "      <th>3pm cloud amount (oktas)</th>\n",
       "      <th>3pm wind direction</th>\n",
       "      <th>3pm wind speed (km/h)</th>\n",
       "      <th>3pm MSL pressure (hPa)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Melbourne (Olympic Park), Victoria</td>\n",
       "      <td>1/11/2022</td>\n",
       "      <td>8.5</td>\n",
       "      <td>13.3</td>\n",
       "      <td>3.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SW</td>\n",
       "      <td>44.0</td>\n",
       "      <td>11:36</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NW</td>\n",
       "      <td>13</td>\n",
       "      <td>991.3</td>\n",
       "      <td>13.2</td>\n",
       "      <td>59.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>WNW</td>\n",
       "      <td>11.0</td>\n",
       "      <td>991.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Melbourne (Olympic Park), Victoria</td>\n",
       "      <td>2/11/2022</td>\n",
       "      <td>6.9</td>\n",
       "      <td>15.7</td>\n",
       "      <td>2.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SSW</td>\n",
       "      <td>43.0</td>\n",
       "      <td>11:33</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>W</td>\n",
       "      <td>9</td>\n",
       "      <td>1006.7</td>\n",
       "      <td>15.1</td>\n",
       "      <td>54.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SSW</td>\n",
       "      <td>13.0</td>\n",
       "      <td>1008.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Melbourne (Olympic Park), Victoria</td>\n",
       "      <td>3/11/2022</td>\n",
       "      <td>9.1</td>\n",
       "      <td>15.4</td>\n",
       "      <td>0.4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SSW</td>\n",
       "      <td>31.0</td>\n",
       "      <td>8:07</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SSW</td>\n",
       "      <td>9</td>\n",
       "      <td>1019.2</td>\n",
       "      <td>13.8</td>\n",
       "      <td>67.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SSW</td>\n",
       "      <td>9.0</td>\n",
       "      <td>1021.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Melbourne (Olympic Park), Victoria</td>\n",
       "      <td>4/11/2022</td>\n",
       "      <td>10.2</td>\n",
       "      <td>17.8</td>\n",
       "      <td>0.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "      <td>24.0</td>\n",
       "      <td>14:50</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>WSW</td>\n",
       "      <td>6</td>\n",
       "      <td>1028.1</td>\n",
       "      <td>16.9</td>\n",
       "      <td>56.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SW</td>\n",
       "      <td>9.0</td>\n",
       "      <td>1026.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Melbourne (Olympic Park), Victoria</td>\n",
       "      <td>5/11/2022</td>\n",
       "      <td>11.8</td>\n",
       "      <td>22.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>N</td>\n",
       "      <td>31.0</td>\n",
       "      <td>11:58</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>N</td>\n",
       "      <td>9</td>\n",
       "      <td>1026.3</td>\n",
       "      <td>18.8</td>\n",
       "      <td>65.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SW</td>\n",
       "      <td>11.0</td>\n",
       "      <td>1023.2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                             Location       Date  Minimum temperature (°C)  \\\n",
       "0  Melbourne (Olympic Park), Victoria  1/11/2022                       8.5   \n",
       "1  Melbourne (Olympic Park), Victoria  2/11/2022                       6.9   \n",
       "2  Melbourne (Olympic Park), Victoria  3/11/2022                       9.1   \n",
       "3  Melbourne (Olympic Park), Victoria  4/11/2022                      10.2   \n",
       "4  Melbourne (Olympic Park), Victoria  5/11/2022                      11.8   \n",
       "\n",
       "   Maximum temperature (°C)  Rainfall (mm)  Evaporation (mm)  \\\n",
       "0                      13.3            3.0               NaN   \n",
       "1                      15.7            2.8               NaN   \n",
       "2                      15.4            0.4               NaN   \n",
       "3                      17.8            0.2               NaN   \n",
       "4                      22.7            0.0               NaN   \n",
       "\n",
       "   Sunshine (hours) Direction of maximum wind gust   \\\n",
       "0               NaN                              SW   \n",
       "1               NaN                             SSW   \n",
       "2               NaN                             SSW   \n",
       "3               NaN                               S   \n",
       "4               NaN                               N   \n",
       "\n",
       "   Speed of maximum wind gust (km/h) Time of maximum wind gust  ...  \\\n",
       "0                               44.0                     11:36  ...   \n",
       "1                               43.0                     11:33  ...   \n",
       "2                               31.0                      8:07  ...   \n",
       "3                               24.0                     14:50  ...   \n",
       "4                               31.0                     11:58  ...   \n",
       "\n",
       "   9am cloud amount (oktas)  9am wind direction  9am wind speed (km/h)  \\\n",
       "0                       NaN                  NW                     13   \n",
       "1                       NaN                   W                      9   \n",
       "2                       NaN                 SSW                      9   \n",
       "3                       NaN                 WSW                      6   \n",
       "4                       NaN                   N                      9   \n",
       "\n",
       "  9am MSL pressure (hPa) 3pm Temperature (°C)  3pm relative humidity (%)  \\\n",
       "0                  991.3                 13.2                       59.0   \n",
       "1                 1006.7                 15.1                       54.0   \n",
       "2                 1019.2                 13.8                       67.0   \n",
       "3                 1028.1                 16.9                       56.0   \n",
       "4                 1026.3                 18.8                       65.0   \n",
       "\n",
       "   3pm cloud amount (oktas)  3pm wind direction  3pm wind speed (km/h)  \\\n",
       "0                       NaN                 WNW                   11.0   \n",
       "1                       NaN                 SSW                   13.0   \n",
       "2                       NaN                 SSW                    9.0   \n",
       "3                       NaN                  SW                    9.0   \n",
       "4                       NaN                  SW                   11.0   \n",
       "\n",
       "  3pm MSL pressure (hPa)  \n",
       "0                  991.5  \n",
       "1                 1008.4  \n",
       "2                 1021.3  \n",
       "3                 1026.6  \n",
       "4                 1023.2  \n",
       "\n",
       "[5 rows x 22 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather_data = pd.read_csv('Weather.csv')\n",
    "\n",
    "# Display the first few rows of the data\n",
    "weather_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date_Time</th>\n",
       "      <th>Demand</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-11-01 00:30:00</td>\n",
       "      <td>4178.18</td>\n",
       "      <td>8.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-11-01 01:00:00</td>\n",
       "      <td>4086.02</td>\n",
       "      <td>0.14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-11-01 01:30:00</td>\n",
       "      <td>4033.37</td>\n",
       "      <td>0.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-11-01 02:00:00</td>\n",
       "      <td>3985.64</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-11-01 02:30:00</td>\n",
       "      <td>3885.64</td>\n",
       "      <td>0.02</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Date_Time   Demand  Price\n",
       "0 2022-11-01 00:30:00  4178.18   8.94\n",
       "1 2022-11-01 01:00:00  4086.02   0.14\n",
       "2 2022-11-01 01:30:00  4033.37   0.02\n",
       "3 2022-11-01 02:00:00  3985.64   0.00\n",
       "4 2022-11-01 02:30:00  3885.64   0.02"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "price_demand_data = price_demand_data[['Date_Time', 'Demand', 'Price']]\n",
    "\n",
    "# Remove any rows with missing values, NaN, null or blank\n",
    "price_demand_data = price_demand_data.dropna()\n",
    "\n",
    "# Convert 'Date_Time' to datetime object\n",
    "price_demand_data['Date_Time'] = pd.to_datetime(price_demand_data['Date_Time'], dayfirst=True)\n",
    "\n",
    "# Save the cleaned data\n",
    "price_demand_data.to_csv('price_and_demand_cleaned.csv', index=False)\n",
    "\n",
    "price_demand_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Minimum temperature (°C)</th>\n",
       "      <th>Maximum temperature (°C)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-11-01</td>\n",
       "      <td>8.5</td>\n",
       "      <td>13.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-11-02</td>\n",
       "      <td>6.9</td>\n",
       "      <td>15.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-11-03</td>\n",
       "      <td>9.1</td>\n",
       "      <td>15.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-11-04</td>\n",
       "      <td>10.2</td>\n",
       "      <td>17.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-11-05</td>\n",
       "      <td>11.8</td>\n",
       "      <td>22.7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Date  Minimum temperature (°C)  Maximum temperature (°C)\n",
       "0 2022-11-01                       8.5                      13.3\n",
       "1 2022-11-02                       6.9                      15.7\n",
       "2 2022-11-03                       9.1                      15.4\n",
       "3 2022-11-04                      10.2                      17.8\n",
       "4 2022-11-05                      11.8                      22.7"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather_data = weather_data[['Date', 'Minimum temperature (°C)', 'Maximum temperature (°C)']]\n",
    "\n",
    "# Remove any rows with missing values, NaN, null or blank\n",
    "weather_data = weather_data.dropna()\n",
    "\n",
    "# Convert 'Date' to datetime object\n",
    "weather_data['Date'] = pd.to_datetime(weather_data['Date'], dayfirst=True)\n",
    "\n",
    "# Save the cleaned data\n",
    "weather_data.to_csv('weather_cleaned.csv', index=False)\n",
    "\n",
    "weather_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key_0</th>\n",
       "      <th>Date_Time</th>\n",
       "      <th>Demand</th>\n",
       "      <th>Price</th>\n",
       "      <th>Minimum temperature (°C)</th>\n",
       "      <th>Maximum temperature (°C)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-11-01</td>\n",
       "      <td>2022-11-01 23:30:00</td>\n",
       "      <td>5627.52</td>\n",
       "      <td>84.06</td>\n",
       "      <td>8.5</td>\n",
       "      <td>13.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-11-02</td>\n",
       "      <td>2022-11-02 23:30:00</td>\n",
       "      <td>6018.43</td>\n",
       "      <td>112.30</td>\n",
       "      <td>6.9</td>\n",
       "      <td>15.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-11-03</td>\n",
       "      <td>2022-11-03 23:30:00</td>\n",
       "      <td>6004.84</td>\n",
       "      <td>299.50</td>\n",
       "      <td>9.1</td>\n",
       "      <td>15.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-11-04</td>\n",
       "      <td>2022-11-04 23:30:00</td>\n",
       "      <td>5757.62</td>\n",
       "      <td>276.70</td>\n",
       "      <td>10.2</td>\n",
       "      <td>17.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-11-05</td>\n",
       "      <td>2022-11-05 23:30:00</td>\n",
       "      <td>4783.60</td>\n",
       "      <td>268.47</td>\n",
       "      <td>11.8</td>\n",
       "      <td>22.7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           key_0           Date_Time   Demand   Price  \\\n",
       "Date                                                    \n",
       "0     2022-11-01 2022-11-01 23:30:00  5627.52   84.06   \n",
       "1     2022-11-02 2022-11-02 23:30:00  6018.43  112.30   \n",
       "2     2022-11-03 2022-11-03 23:30:00  6004.84  299.50   \n",
       "3     2022-11-04 2022-11-04 23:30:00  5757.62  276.70   \n",
       "4     2022-11-05 2022-11-05 23:30:00  4783.60  268.47   \n",
       "\n",
       "      Minimum temperature (°C)  Maximum temperature (°C)  \n",
       "Date                                                      \n",
       "0                          8.5                      13.3  \n",
       "1                          6.9                      15.7  \n",
       "2                          9.1                      15.4  \n",
       "3                         10.2                      17.8  \n",
       "4                         11.8                      22.7  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#\n",
    "# Merge Cleaned data,use Date column as key/index\n",
    "#\n",
    "\n",
    "# Resample 'price_and_demand' data to daily frequency, taking the maximum demand value each day\n",
    "daily_demand = price_demand_data.resample('D', on='Date_Time').max()\n",
    "\n",
    "# Merge the energy data with the weather data\n",
    "merged_data = pd.merge(daily_demand, weather_data, left_on=daily_demand.index.date, right_on=weather_data['Date'].dt.date, how='inner')\n",
    "\n",
    "# Drop redundant 'Date' column\n",
    "merged_data.drop(columns=['Date'], inplace=True)\n",
    "\n",
    "# Rename the index to 'Date'\n",
    "merged_data.index.name = 'Date'\n",
    "\n",
    "merged_data.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeRegressor(random_state=42)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "\n",
    "X = merged_data[['Minimum temperature (°C)', 'Maximum temperature (°C)']]\n",
    "y = merged_data['Demand']\n",
    "\n",
    "# Split the data into training and test sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Create a Decision Tree Regression model\n",
    "dt_model = DecisionTreeRegressor(random_state=42)\n",
    "\n",
    "# Train the model\n",
    "dt_model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "368.22342857142866"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import mean_absolute_error\n",
    "\n",
    "# Make predictions on the test set\n",
    "y_pred_dt = dt_model.predict(X_test)\n",
    "\n",
    "# Calculate the Mean Absolute Error\n",
    "mae_dt = mean_absolute_error(y_test, y_pred_dt)\n",
    "mae_dt\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "381.4686285714286"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "\n",
    "# Create a K-Nearest Neighbors Regression model\n",
    "knn_model = KNeighborsRegressor(n_neighbors=5)\n",
    "\n",
    "# Train the model\n",
    "knn_model.fit(X_train, y_train)\n",
    "\n",
    "# Make predictions on the test set\n",
    "y_pred_knn = knn_model.predict(X_test)\n",
    "\n",
    "# Calculate the Mean Absolute Error\n",
    "mae_knn = mean_absolute_error(y_test, y_pred_knn)\n",
    "mae_knn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "431.81655328111765"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "\n",
    "# Create a Linear Regression model\n",
    "lr_model = LinearRegression()\n",
    "\n",
    "# Train the model\n",
    "lr_model.fit(X_train, y_train)\n",
    "\n",
    "# Make predictions on the test set\n",
    "y_pred_lr = lr_model.predict(X_test)\n",
    "\n",
    "# Calculate the Mean Absolute Error\n",
    "mae_lr = mean_absolute_error(y_test, y_pred_lr)\n",
    "mae_lr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: seaborn in /opt/conda/lib/python3.7/site-packages (0.11.0)\n",
      "Requirement already satisfied: pandas>=0.23 in /opt/conda/lib/python3.7/site-packages (from seaborn) (1.1.4)\n",
      "Requirement already satisfied: matplotlib>=2.2 in /opt/conda/lib/python3.7/site-packages (from seaborn) (3.3.3)\n",
      "Requirement already satisfied: numpy>=1.15 in /opt/conda/lib/python3.7/site-packages (from seaborn) (1.19.4)\n",
      "Requirement already satisfied: scipy>=1.0 in /opt/conda/lib/python3.7/site-packages (from seaborn) (1.5.4)\n",
      "Requirement already satisfied: python-dateutil>=2.7.3 in /opt/conda/lib/python3.7/site-packages (from pandas>=0.23->seaborn) (2.8.1)\n",
      "Requirement already satisfied: pytz>=2017.2 in /opt/conda/lib/python3.7/site-packages (from pandas>=0.23->seaborn) (2020.4)\n",
      "Requirement already satisfied: pillow>=6.2.0 in /opt/conda/lib/python3.7/site-packages (from matplotlib>=2.2->seaborn) (8.0.1)\n",
      "Requirement already satisfied: cycler>=0.10 in /opt/conda/lib/python3.7/site-packages (from matplotlib>=2.2->seaborn) (0.10.0)\n",
      "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.3 in /opt/conda/lib/python3.7/site-packages (from matplotlib>=2.2->seaborn) (2.4.7)\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in /opt/conda/lib/python3.7/site-packages (from matplotlib>=2.2->seaborn) (1.3.1)\n",
      "Requirement already satisfied: six>=1.5 in /opt/conda/lib/python3.7/site-packages (from python-dateutil>=2.7.3->pandas>=0.23->seaborn) (1.14.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "%pip install seaborn\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "fig, axs = plt.subplots(ncols=3, figsize=(20, 6))\n",
    "\n",
    "# Scatter plot for Decision Tree predictions\n",
    "axs[0].scatter(y_test, y_pred_dt, color='blue', alpha=0.5)\n",
    "axs[0].plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'k--', lw=2)\n",
    "axs[0].set_xlabel('Actual')\n",
    "axs[0].set_ylabel('Predicted')\n",
    "axs[0].set_title('Decision Tree')\n",
    "\n",
    "# Scatter plot for K-Nearest Neighbors predictions\n",
    "axs[1].scatter(y_test, y_pred_knn, color='green', alpha=0.5)\n",
    "axs[1].plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'k--', lw=2)\n",
    "axs[1].set_xlabel('Actual')\n",
    "axs[1].set_ylabel('Predicted')\n",
    "axs[1].set_title('K-Nearest Neighbors')\n",
    "\n",
    "# Scatter plot for Linear Regression predictions\n",
    "axs[2].scatter(y_test, y_pred_lr, color='red', alpha=0.5)\n",
    "axs[2].plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'k--', lw=2)\n",
    "axs[2].set_xlabel('Actual')\n",
    "axs[2].set_ylabel('Predicted')\n",
    "axs[2].set_title('Linear Regression')\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create subplots\n",
    "fig, axs = plt.subplots(ncols=2, figsize=(15, 5))\n",
    "\n",
    "# Plot relationships with regression lines\n",
    "sns.regplot(x='Minimum temperature (°C)', y='Demand', data=merged_data, ax=axs[0], color='green')\n",
    "sns.regplot(x='Maximum temperature (°C)', y='Demand', data=merged_data, ax=axs[1], color='red')\n",
    "\n",
    "axs[0].set_title('Demand vs Minimum Temperature')\n",
    "axs[1].set_title('Demand vs Maximum Temperature')\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
